{"env_info": "sys.platform: linux\nPython: 3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2: GeForce RTX 2080 Ti\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.10.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.2\nOpenCV: 4.5.5\nMMCV: 1.4.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.23.0+3e26931", "config": "model = dict(\n    type='FasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[4],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take1/annotations/ember_train_dataset.json',\n        img_prefix='data/0415_take1/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('ember', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take1/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take1/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take1/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take1/val//',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )))\nevaluation = dict(interval=12, metric='bbox')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1, by_epoch=False)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('ember', )\nwork_dir = './exps/0415_take1_lowscale'\ngpu_ids = [0]\nauto_resume = False\n", "seed": 2132072101, "exp_name": "faster_rcnn_r50_caffe_fpn_mstrain_1x_ember_RPN.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.0493, "loss_rpn_cls": 0.43709, "loss_rpn_bbox": 0.01877, "loss_cls": 0.1255, "acc": 98.67383, "loss_bbox": 0.00088, "loss": 0.58225, "time": 1.60749}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0005, "memory": 2746, "data_time": 0.00623, "loss_rpn_cls": 0.02665, "loss_rpn_bbox": 0.00696, "loss_cls": 0.02582, "acc": 99.77344, "loss_bbox": 0.00139, "loss": 0.06081, "time": 1.43192}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00075, "memory": 2746, "data_time": 0.00579, "loss_rpn_cls": 0.01579, "loss_rpn_bbox": 0.00464, "loss_cls": 0.01599, "acc": 99.72852, "loss_bbox": 0.00287, "loss": 0.03929, "time": 1.41371}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.001, "memory": 2746, "data_time": 0.00591, "loss_rpn_cls": 0.009, "loss_rpn_bbox": 0.00545, "loss_cls": 0.0128, "acc": 99.66992, "loss_bbox": 0.00481, "loss": 0.03207, "time": 1.38926}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00125, "memory": 2746, "data_time": 0.00613, "loss_rpn_cls": 0.00527, "loss_rpn_bbox": 0.00403, "loss_cls": 0.01429, "acc": 99.65234, "loss_bbox": 0.00672, "loss": 0.03031, "time": 1.39521}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0015, "memory": 2746, "data_time": 0.00579, "loss_rpn_cls": 0.0049, "loss_rpn_bbox": 0.00346, "loss_cls": 0.01381, "acc": 99.67578, "loss_bbox": 0.00622, "loss": 0.02839, "time": 1.32658}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00175, "memory": 2746, "data_time": 0.00555, "loss_rpn_cls": 0.00469, "loss_rpn_bbox": 0.00381, "loss_cls": 0.0119, "acc": 99.66211, "loss_bbox": 0.00775, "loss": 0.02816, "time": 1.35292}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.002, "memory": 2746, "data_time": 0.00583, "loss_rpn_cls": 0.00234, "loss_rpn_bbox": 0.00343, "loss_cls": 0.01337, "acc": 99.64648, "loss_bbox": 0.00792, "loss": 0.02707, "time": 1.34436}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00229, "memory": 2746, "data_time": 0.0519, "loss_rpn_cls": 0.01145, "loss_rpn_bbox": 0.00326, "loss_cls": 0.01414, "acc": 99.62695, "loss_bbox": 0.0114, "loss": 0.04025, "time": 1.44841}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00557, "loss_rpn_cls": 0.00242, "loss_rpn_bbox": 0.00332, "loss_cls": 0.01291, "acc": 99.61719, "loss_bbox": 0.00949, "loss": 0.02814, "time": 1.33697}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00546, "loss_rpn_cls": 0.00086, "loss_rpn_bbox": 0.00325, "loss_cls": 0.01268, "acc": 99.5625, "loss_bbox": 0.01096, "loss": 0.02775, "time": 1.62908}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.006, "loss_rpn_cls": 0.00143, "loss_rpn_bbox": 0.00379, "loss_cls": 0.01114, "acc": 99.58203, "loss_bbox": 0.01332, "loss": 0.02967, "time": 1.3279}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.0058, "loss_rpn_cls": 0.00125, "loss_rpn_bbox": 0.00282, "loss_cls": 0.01004, "acc": 99.64062, "loss_bbox": 0.01064, "loss": 0.02475, "time": 1.41948}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00573, "loss_rpn_cls": 0.00121, "loss_rpn_bbox": 0.00259, "loss_cls": 0.01072, "acc": 99.61914, "loss_bbox": 0.01456, "loss": 0.02908, "time": 1.39227}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00589, "loss_rpn_cls": 0.00048, "loss_rpn_bbox": 0.00325, "loss_cls": 0.01096, "acc": 99.57812, "loss_bbox": 0.01577, "loss": 0.03045, "time": 1.34836}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00626, "loss_rpn_cls": 0.00275, "loss_rpn_bbox": 0.00381, "loss_cls": 0.0126, "acc": 99.57422, "loss_bbox": 0.01404, "loss": 0.0332, "time": 1.48643}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.05153, "loss_rpn_cls": 0.00107, "loss_rpn_bbox": 0.00233, "loss_cls": 0.01166, "acc": 99.54102, "loss_bbox": 0.01455, "loss": 0.02962, "time": 1.39975}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00557, "loss_rpn_cls": 0.00122, "loss_rpn_bbox": 0.00215, "loss_cls": 0.0119, "acc": 99.61914, "loss_bbox": 0.01341, "loss": 0.02868, "time": 1.39806}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00605, "loss_rpn_cls": 0.00059, "loss_rpn_bbox": 0.00248, "loss_cls": 0.012, "acc": 99.52539, "loss_bbox": 0.01569, "loss": 0.03077, "time": 1.41327}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00623, "loss_rpn_cls": 0.00035, "loss_rpn_bbox": 0.00255, "loss_cls": 0.01138, "acc": 99.55078, "loss_bbox": 0.01471, "loss": 0.02899, "time": 1.42659}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00551, "loss_rpn_cls": 0.00089, "loss_rpn_bbox": 0.00216, "loss_cls": 0.01127, "acc": 99.58203, "loss_bbox": 0.01479, "loss": 0.02911, "time": 1.63895}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.0059, "loss_rpn_cls": 0.00078, "loss_rpn_bbox": 0.00263, "loss_cls": 0.01182, "acc": 99.5332, "loss_bbox": 0.01949, "loss": 0.03472, "time": 1.37398}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 0.00032, "loss_rpn_bbox": 0.00273, "loss_cls": 0.01109, "acc": 99.56836, "loss_bbox": 0.01682, "loss": 0.03095, "time": 1.39212}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00635, "loss_rpn_cls": 0.00251, "loss_rpn_bbox": 0.00331, "loss_cls": 0.01197, "acc": 99.54297, "loss_bbox": 0.01679, "loss": 0.03459, "time": 1.39035}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.05518, "loss_rpn_cls": 0.00019, "loss_rpn_bbox": 0.00238, "loss_cls": 0.01171, "acc": 99.54688, "loss_bbox": 0.01635, "loss": 0.03062, "time": 1.62126}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00817, "loss_rpn_cls": 0.00058, "loss_rpn_bbox": 0.00221, "loss_cls": 0.01168, "acc": 99.52734, "loss_bbox": 0.01819, "loss": 0.03266, "time": 1.64542}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00885, "loss_rpn_cls": 0.00048, "loss_rpn_bbox": 0.00197, "loss_cls": 0.01128, "acc": 99.55078, "loss_bbox": 0.01589, "loss": 0.02962, "time": 1.68715}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00937, "loss_rpn_cls": 0.00066, "loss_rpn_bbox": 0.00247, "loss_cls": 0.01207, "acc": 99.48438, "loss_bbox": 0.01815, "loss": 0.03336, "time": 1.79899}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00724, "loss_rpn_cls": 0.00023, "loss_rpn_bbox": 0.00295, "loss_cls": 0.00962, "acc": 99.59766, "loss_bbox": 0.01397, "loss": 0.02677, "time": 1.68782}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00744, "loss_rpn_cls": 0.00164, "loss_rpn_bbox": 0.00216, "loss_cls": 0.01129, "acc": 99.56836, "loss_bbox": 0.01484, "loss": 0.02992, "time": 1.67652}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.0069, "loss_rpn_cls": 0.00065, "loss_rpn_bbox": 0.00218, "loss_cls": 0.01244, "acc": 99.54102, "loss_bbox": 0.01615, "loss": 0.03142, "time": 1.8538}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00755, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00213, "loss_cls": 0.01268, "acc": 99.50781, "loss_bbox": 0.01903, "loss": 0.03399, "time": 1.74808}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.05638, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.00207, "loss_cls": 0.01029, "acc": 99.55859, "loss_bbox": 0.017, "loss": 0.02946, "time": 1.79654}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00764, "loss_rpn_cls": 0.00163, "loss_rpn_bbox": 0.00236, "loss_cls": 0.01065, "acc": 99.60156, "loss_bbox": 0.01625, "loss": 0.03088, "time": 1.84213}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00817, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 0.00259, "loss_cls": 0.01065, "acc": 99.57227, "loss_bbox": 0.01529, "loss": 0.0288, "time": 1.7285}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00917, "loss_rpn_cls": 0.00058, "loss_rpn_bbox": 0.00214, "loss_cls": 0.01083, "acc": 99.57227, "loss_bbox": 0.0163, "loss": 0.02984, "time": 1.73354}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00752, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.0017, "loss_cls": 0.01069, "acc": 99.59961, "loss_bbox": 0.01609, "loss": 0.02855, "time": 1.73257}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00884, "loss_rpn_cls": 0.00043, "loss_rpn_bbox": 0.00161, "loss_cls": 0.01004, "acc": 99.63867, "loss_bbox": 0.01412, "loss": 0.02619, "time": 1.75193}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00789, "loss_rpn_cls": 0.00023, "loss_rpn_bbox": 0.00271, "loss_cls": 0.0104, "acc": 99.55664, "loss_bbox": 0.01775, "loss": 0.0311, "time": 1.76906}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00559, "loss_rpn_cls": 0.00018, "loss_rpn_bbox": 0.00154, "loss_cls": 0.01121, "acc": 99.53906, "loss_bbox": 0.01723, "loss": 0.03016, "time": 1.68487}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.0518, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.00196, "loss_cls": 0.01034, "acc": 99.59961, "loss_bbox": 0.01613, "loss": 0.0285, "time": 1.50808}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00526, "loss_rpn_cls": 0.00051, "loss_rpn_bbox": 0.00207, "loss_cls": 0.0114, "acc": 99.50195, "loss_bbox": 0.01679, "loss": 0.03077, "time": 1.48923}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00562, "loss_rpn_cls": 0.00027, "loss_rpn_bbox": 0.00149, "loss_cls": 0.00893, "acc": 99.60938, "loss_bbox": 0.01521, "loss": 0.0259, "time": 1.47434}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00525, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00156, "loss_cls": 0.00919, "acc": 99.63086, "loss_bbox": 0.01576, "loss": 0.02667, "time": 1.42988}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00535, "loss_rpn_cls": 0.00098, "loss_rpn_bbox": 0.00191, "loss_cls": 0.01103, "acc": 99.61328, "loss_bbox": 0.01442, "loss": 0.02834, "time": 1.45347}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00572, "loss_rpn_cls": 0.00087, "loss_rpn_bbox": 0.00229, "loss_cls": 0.01006, "acc": 99.64844, "loss_bbox": 0.01428, "loss": 0.02751, "time": 1.40772}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00584, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00192, "loss_cls": 0.00997, "acc": 99.59961, "loss_bbox": 0.01432, "loss": 0.02657, "time": 1.44386}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00524, "loss_rpn_cls": 4e-05, "loss_rpn_bbox": 0.00157, "loss_cls": 0.00913, "acc": 99.69336, "loss_bbox": 0.01512, "loss": 0.02586, "time": 1.39963}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.05014, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 0.00195, "loss_cls": 0.01026, "acc": 99.56445, "loss_bbox": 0.01582, "loss": 0.0282, "time": 1.4468}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00524, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.00141, "loss_cls": 0.00949, "acc": 99.64844, "loss_bbox": 0.01476, "loss": 0.02571, "time": 1.72719}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00555, "loss_rpn_cls": 0.0007, "loss_rpn_bbox": 0.00175, "loss_cls": 0.00966, "acc": 99.64844, "loss_bbox": 0.01576, "loss": 0.02788, "time": 1.48435}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00539, "loss_rpn_cls": 0.00041, "loss_rpn_bbox": 0.00168, "loss_cls": 0.01002, "acc": 99.625, "loss_bbox": 0.01409, "loss": 0.02619, "time": 1.42943}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00534, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 0.00162, "loss_cls": 0.00886, "acc": 99.63672, "loss_bbox": 0.01261, "loss": 0.02323, "time": 1.44257}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.0052, "loss_rpn_cls": 0.00045, "loss_rpn_bbox": 0.00208, "loss_cls": 0.00925, "acc": 99.62695, "loss_bbox": 0.01382, "loss": 0.0256, "time": 1.46226}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00582, "loss_rpn_cls": 0.00018, "loss_rpn_bbox": 0.00151, "loss_cls": 0.00955, "acc": 99.62305, "loss_bbox": 0.01571, "loss": 0.02694, "time": 1.4856}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00539, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00183, "loss_cls": 0.01052, "acc": 99.56641, "loss_bbox": 0.01762, "loss": 0.03013, "time": 1.48168}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.0549, "loss_rpn_cls": 0.00029, "loss_rpn_bbox": 0.00198, "loss_cls": 0.0097, "acc": 99.61719, "loss_bbox": 0.01587, "loss": 0.02784, "time": 1.48111}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00525, "loss_rpn_cls": 0.00039, "loss_rpn_bbox": 0.00133, "loss_cls": 0.00838, "acc": 99.69727, "loss_bbox": 0.01339, "loss": 0.02349, "time": 1.46885}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00527, "loss_rpn_cls": 0.00033, "loss_rpn_bbox": 0.00142, "loss_cls": 0.00828, "acc": 99.65039, "loss_bbox": 0.01367, "loss": 0.0237, "time": 1.47659}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00557, "loss_rpn_cls": 0.00045, "loss_rpn_bbox": 0.00174, "loss_cls": 0.00939, "acc": 99.65625, "loss_bbox": 0.01586, "loss": 0.02744, "time": 1.71616}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00522, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00184, "loss_cls": 0.00838, "acc": 99.70312, "loss_bbox": 0.01487, "loss": 0.02526, "time": 1.47535}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00545, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00207, "loss_cls": 0.00834, "acc": 99.66797, "loss_bbox": 0.01403, "loss": 0.02456, "time": 1.45992}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00605, "loss_rpn_cls": 0.00156, "loss_rpn_bbox": 0.00169, "loss_cls": 0.00801, "acc": 99.70898, "loss_bbox": 0.01409, "loss": 0.02534, "time": 1.48749}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00566, "loss_rpn_cls": 0.00038, "loss_rpn_bbox": 0.00236, "loss_cls": 0.00965, "acc": 99.64062, "loss_bbox": 0.01374, "loss": 0.02613, "time": 1.52389}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.05145, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.00176, "loss_cls": 0.00772, "acc": 99.69141, "loss_bbox": 0.0126, "loss": 0.02219, "time": 1.48345}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00574, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.00143, "loss_cls": 0.00777, "acc": 99.71875, "loss_bbox": 0.01271, "loss": 0.02199, "time": 1.53737}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00573, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00115, "loss_cls": 0.00736, "acc": 99.69727, "loss_bbox": 0.01296, "loss": 0.02163, "time": 1.50956}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00551, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.00129, "loss_cls": 0.00712, "acc": 99.70312, "loss_bbox": 0.01213, "loss": 0.02061, "time": 1.43503}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.00104, "loss_cls": 0.0086, "acc": 99.67383, "loss_bbox": 0.01291, "loss": 0.02261, "time": 1.46982}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00612, "loss_rpn_cls": 0.00025, "loss_rpn_bbox": 0.00122, "loss_cls": 0.00727, "acc": 99.71289, "loss_bbox": 0.01309, "loss": 0.02183, "time": 1.49921}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.00575, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00116, "loss_cls": 0.00715, "acc": 99.71484, "loss_bbox": 0.01225, "loss": 0.02092, "time": 1.73433}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.00554, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00099, "loss_cls": 0.00783, "acc": 99.72266, "loss_bbox": 0.01091, "loss": 0.01989, "time": 1.47313}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.05094, "loss_rpn_cls": 0.00034, "loss_rpn_bbox": 0.00149, "loss_cls": 0.00819, "acc": 99.6582, "loss_bbox": 0.01505, "loss": 0.02508, "time": 1.49073}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00614, "loss_rpn_cls": 0.0004, "loss_rpn_bbox": 0.00106, "loss_cls": 0.00696, "acc": 99.74609, "loss_bbox": 0.01134, "loss": 0.01976, "time": 1.44794}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00573, "loss_rpn_cls": 0.00043, "loss_rpn_bbox": 0.00096, "loss_cls": 0.00694, "acc": 99.71875, "loss_bbox": 0.01209, "loss": 0.02042, "time": 1.46852}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00531, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 0.00125, "loss_cls": 0.00782, "acc": 99.67773, "loss_bbox": 0.01439, "loss": 0.0236, "time": 1.42902}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00606, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 0.00109, "loss_cls": 0.00752, "acc": 99.69531, "loss_bbox": 0.01368, "loss": 0.02243, "time": 1.43807}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00526, "loss_rpn_cls": 0.00041, "loss_rpn_bbox": 0.00115, "loss_cls": 0.00767, "acc": 99.70508, "loss_bbox": 0.01319, "loss": 0.02242, "time": 1.52972}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.00588, "loss_rpn_cls": 4e-05, "loss_rpn_bbox": 0.00102, "loss_cls": 0.00783, "acc": 99.71484, "loss_bbox": 0.01177, "loss": 0.02066, "time": 1.44005}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.0055, "loss_rpn_cls": 0.00026, "loss_rpn_bbox": 0.00097, "loss_cls": 0.00686, "acc": 99.75, "loss_bbox": 0.01295, "loss": 0.02103, "time": 1.44429}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.05067, "loss_rpn_cls": 3e-05, "loss_rpn_bbox": 0.00112, "loss_cls": 0.00727, "acc": 99.68945, "loss_bbox": 0.01274, "loss": 0.02116, "time": 1.73303}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00545, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.0011, "loss_cls": 0.00818, "acc": 99.67383, "loss_bbox": 0.01314, "loss": 0.02251, "time": 1.47764}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00532, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 0.00114, "loss_cls": 0.00721, "acc": 99.71094, "loss_bbox": 0.01354, "loss": 0.02207, "time": 1.42295}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00572, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00126, "loss_cls": 0.00753, "acc": 99.71875, "loss_bbox": 0.01245, "loss": 0.02136, "time": 1.43244}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00547, "loss_rpn_cls": 3e-05, "loss_rpn_bbox": 0.00106, "loss_cls": 0.0073, "acc": 99.72266, "loss_bbox": 0.01326, "loss": 0.02165, "time": 1.44679}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00528, "loss_rpn_cls": 0.00011, "loss_rpn_bbox": 0.00087, "loss_cls": 0.00693, "acc": 99.73828, "loss_bbox": 0.01141, "loss": 0.01932, "time": 1.44243}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.00567, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.0012, "loss_cls": 0.00722, "acc": 99.72461, "loss_bbox": 0.01201, "loss": 0.02047, "time": 1.43885}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.00099, "loss_cls": 0.00798, "acc": 99.67383, "loss_bbox": 0.01283, "loss": 0.02187, "time": 1.50278}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 3e-05, "memory": 2746, "data_time": 0.05034, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.00105, "loss_cls": 0.00672, "acc": 99.72656, "loss_bbox": 0.01277, "loss": 0.02062, "time": 1.50376}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 3e-05, "memory": 2746, "data_time": 0.00555, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.00108, "loss_cls": 0.00661, "acc": 99.75586, "loss_bbox": 0.01303, "loss": 0.0208, "time": 1.43779}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 3e-05, "memory": 2746, "data_time": 0.00544, "loss_rpn_cls": 0.00013, "loss_rpn_bbox": 0.00102, "loss_cls": 0.00669, "acc": 99.75391, "loss_bbox": 0.01107, "loss": 0.01892, "time": 1.42782}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 3e-05, "memory": 2746, "data_time": 0.00619, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.00099, "loss_cls": 0.00668, "acc": 99.73242, "loss_bbox": 0.01356, "loss": 0.02132, "time": 1.64724}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 3e-05, "memory": 2746, "data_time": 0.00521, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.00097, "loss_cls": 0.00666, "acc": 99.74609, "loss_bbox": 0.01141, "loss": 0.01909, "time": 1.41344}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 3e-05, "memory": 2746, "data_time": 0.00564, "loss_rpn_cls": 0.00011, "loss_rpn_bbox": 0.00105, "loss_cls": 0.00727, "acc": 99.73047, "loss_bbox": 0.01197, "loss": 0.0204, "time": 1.46621}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 3e-05, "memory": 2746, "data_time": 0.00558, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00094, "loss_cls": 0.00758, "acc": 99.70117, "loss_bbox": 0.0132, "loss": 0.02219, "time": 1.50183}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 3e-05, "memory": 2746, "data_time": 0.00631, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00108, "loss_cls": 0.00677, "acc": 99.76758, "loss_bbox": 0.01202, "loss": 0.02034, "time": 1.53531}
{"mode": "val", "epoch": 12, "iter": 326, "lr": 3e-05, "bbox_mAP": 0.284, "bbox_mAP_50": 0.656, "bbox_mAP_75": 0.197, "bbox_mAP_s": 0.284, "bbox_mAP_m": -1.0, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.284 0.656 0.197 0.284 -1.000 -1.000"}
