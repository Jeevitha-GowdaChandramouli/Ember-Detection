{"env_info": "sys.platform: linux\nPython: 3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2: GeForce RTX 2080 Ti\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.10.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.2\nOpenCV: 4.5.5\nMMCV: 1.4.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.23.0+3e26931", "config": "model = dict(\n    type='FasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_train_dataset.json',\n        img_prefix='data/0415_take2/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('ember', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take2/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take2/val//',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )))\nevaluation = dict(interval=12, metric='bbox')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1, by_epoch=False)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('ember', )\nwork_dir = './exps/0415_take2'\ngpu_ids = [0]\nauto_resume = False\n", "seed": 153402855, "exp_name": "faster_rcnn_r50_caffe_fpn_mstrain_1x_ember.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.1008, "loss_rpn_cls": 0.32483, "loss_rpn_bbox": 0.03151, "loss_cls": 0.0912, "acc": 98.99414, "loss_bbox": 0.01203, "loss": 0.45958, "time": 1.67463}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0005, "memory": 2746, "data_time": 0.00549, "loss_rpn_cls": 0.09985, "loss_rpn_bbox": 0.0274, "loss_cls": 0.03691, "acc": 99.22656, "loss_bbox": 0.02421, "loss": 0.18837, "time": 1.46802}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00075, "memory": 2746, "data_time": 0.00572, "loss_rpn_cls": 0.01269, "loss_rpn_bbox": 0.01169, "loss_cls": 0.03485, "acc": 98.82227, "loss_bbox": 0.04228, "loss": 0.10152, "time": 1.45889}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.001, "memory": 2746, "data_time": 0.00633, "loss_rpn_cls": 0.00573, "loss_rpn_bbox": 0.00721, "loss_cls": 0.03706, "acc": 98.4707, "loss_bbox": 0.05656, "loss": 0.10656, "time": 1.47915}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00125, "memory": 2746, "data_time": 0.00583, "loss_rpn_cls": 0.00215, "loss_rpn_bbox": 0.00567, "loss_cls": 0.03501, "acc": 98.55469, "loss_bbox": 0.0529, "loss": 0.09573, "time": 1.40626}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0015, "memory": 2746, "data_time": 0.0054, "loss_rpn_cls": 0.00804, "loss_rpn_bbox": 0.0087, "loss_cls": 0.03551, "acc": 98.67773, "loss_bbox": 0.04618, "loss": 0.09843, "time": 1.42333}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00175, "memory": 2746, "data_time": 0.00559, "loss_rpn_cls": 0.00178, "loss_rpn_bbox": 0.00656, "loss_cls": 0.0384, "acc": 98.39453, "loss_bbox": 0.05824, "loss": 0.10498, "time": 1.47447}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.002, "memory": 2746, "data_time": 0.0058, "loss_rpn_cls": 0.00131, "loss_rpn_bbox": 0.00588, "loss_cls": 0.03106, "acc": 98.64453, "loss_bbox": 0.05102, "loss": 0.08927, "time": 1.6953}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0024, "memory": 2746, "data_time": 0.08101, "loss_rpn_cls": 0.00102, "loss_rpn_bbox": 0.00513, "loss_cls": 0.03079, "acc": 98.6543, "loss_bbox": 0.05762, "loss": 0.09455, "time": 1.51019}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00583, "loss_rpn_cls": 0.00055, "loss_rpn_bbox": 0.00647, "loss_cls": 0.03364, "acc": 98.60352, "loss_bbox": 0.06329, "loss": 0.10396, "time": 1.52756}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00584, "loss_rpn_cls": 0.00101, "loss_rpn_bbox": 0.00538, "loss_cls": 0.03093, "acc": 98.68359, "loss_bbox": 0.04687, "loss": 0.08418, "time": 1.43042}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00539, "loss_rpn_cls": 0.00108, "loss_rpn_bbox": 0.00688, "loss_cls": 0.03522, "acc": 98.49609, "loss_bbox": 0.06159, "loss": 0.10476, "time": 1.53855}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00596, "loss_rpn_cls": 0.00088, "loss_rpn_bbox": 0.00423, "loss_cls": 0.03317, "acc": 98.57031, "loss_bbox": 0.05686, "loss": 0.09514, "time": 1.41517}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00618, "loss_rpn_cls": 0.00333, "loss_rpn_bbox": 0.0057, "loss_cls": 0.03371, "acc": 98.64062, "loss_bbox": 0.04917, "loss": 0.09191, "time": 1.42489}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00577, "loss_rpn_cls": 0.00408, "loss_rpn_bbox": 0.0074, "loss_cls": 0.03447, "acc": 98.48242, "loss_bbox": 0.05774, "loss": 0.1037, "time": 1.46634}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00631, "loss_rpn_cls": 0.01225, "loss_rpn_bbox": 0.00734, "loss_cls": 0.03669, "acc": 98.55469, "loss_bbox": 0.05436, "loss": 0.11063, "time": 1.44731}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.0728, "loss_rpn_cls": 0.00216, "loss_rpn_bbox": 0.00707, "loss_cls": 0.0254, "acc": 98.88477, "loss_bbox": 0.03941, "loss": 0.07404, "time": 1.49618}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00587, "loss_rpn_cls": 0.00151, "loss_rpn_bbox": 0.00601, "loss_cls": 0.02654, "acc": 98.90039, "loss_bbox": 0.0416, "loss": 0.07567, "time": 1.66198}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00583, "loss_rpn_cls": 0.00065, "loss_rpn_bbox": 0.00551, "loss_cls": 0.02452, "acc": 98.92969, "loss_bbox": 0.03908, "loss": 0.06976, "time": 1.50932}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00552, "loss_rpn_cls": 0.00094, "loss_rpn_bbox": 0.00431, "loss_cls": 0.02811, "acc": 98.77539, "loss_bbox": 0.0509, "loss": 0.08426, "time": 1.42475}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00541, "loss_rpn_cls": 0.00061, "loss_rpn_bbox": 0.00457, "loss_cls": 0.02138, "acc": 99.08398, "loss_bbox": 0.04356, "loss": 0.07012, "time": 1.46364}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00525, "loss_rpn_cls": 0.00131, "loss_rpn_bbox": 0.00705, "loss_cls": 0.02762, "acc": 98.78516, "loss_bbox": 0.05169, "loss": 0.08766, "time": 1.5582}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00566, "loss_rpn_cls": 0.00045, "loss_rpn_bbox": 0.00404, "loss_cls": 0.02392, "acc": 98.90625, "loss_bbox": 0.04545, "loss": 0.07386, "time": 1.49215}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00551, "loss_rpn_cls": 0.00284, "loss_rpn_bbox": 0.00351, "loss_cls": 0.0274, "acc": 98.84961, "loss_bbox": 0.04695, "loss": 0.0807, "time": 1.43772}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.08139, "loss_rpn_cls": 0.00027, "loss_rpn_bbox": 0.00467, "loss_cls": 0.02615, "acc": 98.93164, "loss_bbox": 0.0456, "loss": 0.07669, "time": 1.51134}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.0059, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 0.00463, "loss_cls": 0.02494, "acc": 98.87695, "loss_bbox": 0.0491, "loss": 0.07881, "time": 1.44655}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00644, "loss_rpn_cls": 0.00034, "loss_rpn_bbox": 0.00394, "loss_cls": 0.02343, "acc": 99.02539, "loss_bbox": 0.05322, "loss": 0.08093, "time": 1.42779}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00564, "loss_rpn_cls": 0.00215, "loss_rpn_bbox": 0.00523, "loss_cls": 0.02599, "acc": 98.93359, "loss_bbox": 0.04521, "loss": 0.07858, "time": 1.67119}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00691, "loss_rpn_cls": 0.00049, "loss_rpn_bbox": 0.00511, "loss_cls": 0.02463, "acc": 98.88477, "loss_bbox": 0.04689, "loss": 0.07712, "time": 1.4718}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00558, "loss_rpn_cls": 0.00043, "loss_rpn_bbox": 0.00551, "loss_cls": 0.02443, "acc": 98.88867, "loss_bbox": 0.04829, "loss": 0.07866, "time": 1.46545}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00569, "loss_rpn_cls": 0.00033, "loss_rpn_bbox": 0.0039, "loss_cls": 0.02182, "acc": 99.09766, "loss_bbox": 0.03995, "loss": 0.06601, "time": 1.45626}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00616, "loss_rpn_cls": 0.00091, "loss_rpn_bbox": 0.00392, "loss_cls": 0.02287, "acc": 98.99414, "loss_bbox": 0.04439, "loss": 0.07209, "time": 1.41123}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.05518, "loss_rpn_cls": 0.00055, "loss_rpn_bbox": 0.00372, "loss_cls": 0.0245, "acc": 98.875, "loss_bbox": 0.04431, "loss": 0.07308, "time": 1.52344}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00538, "loss_rpn_cls": 0.00156, "loss_rpn_bbox": 0.0046, "loss_cls": 0.0236, "acc": 98.99609, "loss_bbox": 0.04899, "loss": 0.07875, "time": 1.48767}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00587, "loss_rpn_cls": 0.00061, "loss_rpn_bbox": 0.00416, "loss_cls": 0.02214, "acc": 99.04883, "loss_bbox": 0.04086, "loss": 0.06778, "time": 1.43341}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.0053, "loss_rpn_cls": 0.00025, "loss_rpn_bbox": 0.0054, "loss_cls": 0.02034, "acc": 99.0957, "loss_bbox": 0.03953, "loss": 0.06552, "time": 1.48843}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00573, "loss_rpn_cls": 0.00132, "loss_rpn_bbox": 0.00368, "loss_cls": 0.0251, "acc": 99.01758, "loss_bbox": 0.04299, "loss": 0.07309, "time": 1.43815}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00534, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00422, "loss_cls": 0.02267, "acc": 99.02539, "loss_bbox": 0.04336, "loss": 0.07071, "time": 1.51258}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00535, "loss_rpn_cls": 0.00071, "loss_rpn_bbox": 0.00339, "loss_cls": 0.0206, "acc": 99.08398, "loss_bbox": 0.03718, "loss": 0.06188, "time": 1.66925}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00523, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00293, "loss_cls": 0.02252, "acc": 99.05273, "loss_bbox": 0.0444, "loss": 0.06996, "time": 1.47374}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.06124, "loss_rpn_cls": 0.00059, "loss_rpn_bbox": 0.0037, "loss_cls": 0.02126, "acc": 99.03125, "loss_bbox": 0.04634, "loss": 0.07188, "time": 1.48867}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00619, "loss_rpn_cls": 0.00024, "loss_rpn_bbox": 0.00204, "loss_cls": 0.01933, "acc": 99.20312, "loss_bbox": 0.03674, "loss": 0.05835, "time": 1.41926}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00707, "loss_rpn_cls": 0.00024, "loss_rpn_bbox": 0.00303, "loss_cls": 0.02046, "acc": 99.12695, "loss_bbox": 0.04181, "loss": 0.06554, "time": 1.41643}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.0055, "loss_rpn_cls": 0.0007, "loss_rpn_bbox": 0.00451, "loss_cls": 0.02279, "acc": 99.10742, "loss_bbox": 0.04408, "loss": 0.07207, "time": 1.46634}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 0.00079, "loss_rpn_bbox": 0.00362, "loss_cls": 0.02149, "acc": 99.12695, "loss_bbox": 0.04131, "loss": 0.06721, "time": 1.47868}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00534, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00426, "loss_cls": 0.02087, "acc": 99.09766, "loss_bbox": 0.04004, "loss": 0.0653, "time": 1.44655}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.0066, "loss_rpn_cls": 0.00072, "loss_rpn_bbox": 0.00486, "loss_cls": 0.02264, "acc": 99.00391, "loss_bbox": 0.04777, "loss": 0.07599, "time": 1.44127}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00549, "loss_rpn_cls": 0.00048, "loss_rpn_bbox": 0.00366, "loss_cls": 0.02073, "acc": 99.10547, "loss_bbox": 0.04539, "loss": 0.07026, "time": 1.45302}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.06097, "loss_rpn_cls": 0.00026, "loss_rpn_bbox": 0.0028, "loss_cls": 0.01991, "acc": 99.13086, "loss_bbox": 0.04164, "loss": 0.06462, "time": 1.7537}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00544, "loss_rpn_cls": 0.00053, "loss_rpn_bbox": 0.00427, "loss_cls": 0.02023, "acc": 99.08398, "loss_bbox": 0.04052, "loss": 0.06555, "time": 1.43686}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00587, "loss_rpn_cls": 0.0002, "loss_rpn_bbox": 0.00325, "loss_cls": 0.02142, "acc": 99.12305, "loss_bbox": 0.04216, "loss": 0.06702, "time": 1.45956}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 0.00025, "loss_rpn_bbox": 0.004, "loss_cls": 0.0195, "acc": 99.13477, "loss_bbox": 0.04005, "loss": 0.06379, "time": 1.52964}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.006, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 0.00232, "loss_cls": 0.01809, "acc": 99.20117, "loss_bbox": 0.03781, "loss": 0.05852, "time": 1.46955}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.0055, "loss_rpn_cls": 0.0009, "loss_rpn_bbox": 0.00397, "loss_cls": 0.01911, "acc": 99.27148, "loss_bbox": 0.04383, "loss": 0.0678, "time": 1.43036}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00546, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00334, "loss_cls": 0.022, "acc": 99.06836, "loss_bbox": 0.04693, "loss": 0.07238, "time": 1.41401}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00568, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00352, "loss_cls": 0.02324, "acc": 98.97461, "loss_bbox": 0.04955, "loss": 0.07647, "time": 1.44201}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.0025, "memory": 2746, "data_time": 0.0966, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00396, "loss_cls": 0.02006, "acc": 99.08398, "loss_bbox": 0.04521, "loss": 0.06938, "time": 1.53758}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0025, "memory": 2746, "data_time": 0.00616, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 0.00364, "loss_cls": 0.01945, "acc": 99.15234, "loss_bbox": 0.04021, "loss": 0.06347, "time": 1.49613}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.0025, "memory": 2746, "data_time": 0.00543, "loss_rpn_cls": 0.00037, "loss_rpn_bbox": 0.00302, "loss_cls": 0.01766, "acc": 99.26758, "loss_bbox": 0.03921, "loss": 0.06025, "time": 1.42272}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.0025, "memory": 2746, "data_time": 0.00579, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.00319, "loss_cls": 0.02064, "acc": 99.08398, "loss_bbox": 0.04474, "loss": 0.06865, "time": 1.73072}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.0025, "memory": 2746, "data_time": 0.00573, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 0.00223, "loss_cls": 0.02128, "acc": 99.07812, "loss_bbox": 0.04367, "loss": 0.06741, "time": 1.44833}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.0025, "memory": 2746, "data_time": 0.00522, "loss_rpn_cls": 0.00042, "loss_rpn_bbox": 0.00237, "loss_cls": 0.02136, "acc": 99.15039, "loss_bbox": 0.04276, "loss": 0.0669, "time": 1.40834}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.0025, "memory": 2746, "data_time": 0.00585, "loss_rpn_cls": 0.0004, "loss_rpn_bbox": 0.00411, "loss_cls": 0.02056, "acc": 99.12305, "loss_bbox": 0.04309, "loss": 0.06817, "time": 1.51251}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.0025, "memory": 2746, "data_time": 0.00578, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00358, "loss_cls": 0.01744, "acc": 99.26367, "loss_bbox": 0.0384, "loss": 0.05957, "time": 1.42181}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.08065, "loss_rpn_cls": 0.00061, "loss_rpn_bbox": 0.00257, "loss_cls": 0.01498, "acc": 99.38281, "loss_bbox": 0.03454, "loss": 0.05269, "time": 1.51536}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00544, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.00233, "loss_cls": 0.01552, "acc": 99.35547, "loss_bbox": 0.0313, "loss": 0.04925, "time": 1.45222}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00535, "loss_rpn_cls": 0.00018, "loss_rpn_bbox": 0.00221, "loss_cls": 0.01808, "acc": 99.24023, "loss_bbox": 0.0344, "loss": 0.05486, "time": 1.44273}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00553, "loss_rpn_cls": 0.00029, "loss_rpn_bbox": 0.00256, "loss_cls": 0.01619, "acc": 99.32617, "loss_bbox": 0.03412, "loss": 0.05316, "time": 1.42674}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00622, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00198, "loss_cls": 0.01428, "acc": 99.42578, "loss_bbox": 0.03097, "loss": 0.04759, "time": 1.47456}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00558, "loss_rpn_cls": 0.00025, "loss_rpn_bbox": 0.00182, "loss_cls": 0.01641, "acc": 99.26953, "loss_bbox": 0.03392, "loss": 0.0524, "time": 1.66972}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.00538, "loss_rpn_cls": 0.00021, "loss_rpn_bbox": 0.00304, "loss_cls": 0.01743, "acc": 99.25781, "loss_bbox": 0.03623, "loss": 0.05692, "time": 1.46078}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.00603, "loss_rpn_cls": 6e-05, "loss_rpn_bbox": 0.00206, "loss_cls": 0.01551, "acc": 99.34961, "loss_bbox": 0.03104, "loss": 0.04866, "time": 1.47669}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.08045, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.00205, "loss_cls": 0.01421, "acc": 99.39258, "loss_bbox": 0.02791, "loss": 0.04425, "time": 1.56381}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00547, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 0.00176, "loss_cls": 0.01532, "acc": 99.35742, "loss_bbox": 0.03285, "loss": 0.05015, "time": 1.4952}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00563, "loss_rpn_cls": 0.00029, "loss_rpn_bbox": 0.00233, "loss_cls": 0.0154, "acc": 99.30078, "loss_bbox": 0.03196, "loss": 0.04997, "time": 1.48807}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00591, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 0.00214, "loss_cls": 0.01601, "acc": 99.3418, "loss_bbox": 0.0338, "loss": 0.05217, "time": 1.44173}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00509, "loss_rpn_cls": 0.00011, "loss_rpn_bbox": 0.0024, "loss_cls": 0.01591, "acc": 99.30469, "loss_bbox": 0.0318, "loss": 0.05023, "time": 1.47079}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00537, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.00119, "loss_cls": 0.01415, "acc": 99.39062, "loss_bbox": 0.02699, "loss": 0.04237, "time": 1.56935}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.00552, "loss_rpn_cls": 0.00033, "loss_rpn_bbox": 0.00294, "loss_cls": 0.01522, "acc": 99.375, "loss_bbox": 0.03247, "loss": 0.05097, "time": 1.44462}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.00527, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00238, "loss_cls": 0.01529, "acc": 99.35547, "loss_bbox": 0.032, "loss": 0.04981, "time": 1.50259}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00025, "memory": 2746, "data_time": 0.06348, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00187, "loss_cls": 0.01418, "acc": 99.38672, "loss_bbox": 0.03047, "loss": 0.04687, "time": 1.55719}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00025, "memory": 2746, "data_time": 0.00627, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 0.00213, "loss_cls": 0.01424, "acc": 99.39844, "loss_bbox": 0.02983, "loss": 0.04634, "time": 1.43255}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00025, "memory": 2746, "data_time": 0.00579, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.00223, "loss_cls": 0.01472, "acc": 99.37695, "loss_bbox": 0.03209, "loss": 0.04914, "time": 1.44236}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00025, "memory": 2746, "data_time": 0.00588, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 0.00221, "loss_cls": 0.01683, "acc": 99.31055, "loss_bbox": 0.03252, "loss": 0.05185, "time": 1.44302}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.00025, "memory": 2746, "data_time": 0.00537, "loss_rpn_cls": 0.00026, "loss_rpn_bbox": 0.00212, "loss_cls": 0.01523, "acc": 99.38281, "loss_bbox": 0.03153, "loss": 0.04914, "time": 1.4503}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.00025, "memory": 2746, "data_time": 0.00548, "loss_rpn_cls": 2e-05, "loss_rpn_bbox": 0.00165, "loss_cls": 0.01343, "acc": 99.43945, "loss_bbox": 0.02546, "loss": 0.04057, "time": 1.48234}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.00025, "memory": 2746, "data_time": 0.0057, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 0.00228, "loss_cls": 0.01596, "acc": 99.3125, "loss_bbox": 0.03215, "loss": 0.05069, "time": 1.44912}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.00025, "memory": 2746, "data_time": 0.00511, "loss_rpn_cls": 0.00029, "loss_rpn_bbox": 0.00248, "loss_cls": 0.01527, "acc": 99.36523, "loss_bbox": 0.02871, "loss": 0.04675, "time": 1.41907}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 3e-05, "memory": 2746, "data_time": 0.0526, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.00146, "loss_cls": 0.01425, "acc": 99.43359, "loss_bbox": 0.0295, "loss": 0.04531, "time": 1.52174}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 3e-05, "memory": 2746, "data_time": 0.00532, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.00176, "loss_cls": 0.01439, "acc": 99.39062, "loss_bbox": 0.02828, "loss": 0.04454, "time": 1.4816}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 3e-05, "memory": 2746, "data_time": 0.00579, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 0.00213, "loss_cls": 0.01546, "acc": 99.35156, "loss_bbox": 0.02976, "loss": 0.04751, "time": 1.69576}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 3e-05, "memory": 2746, "data_time": 0.00578, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 0.00197, "loss_cls": 0.0128, "acc": 99.5, "loss_bbox": 0.026, "loss": 0.04107, "time": 1.43752}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 3e-05, "memory": 2746, "data_time": 0.00552, "loss_rpn_cls": 0.00051, "loss_rpn_bbox": 0.00204, "loss_cls": 0.01406, "acc": 99.44922, "loss_bbox": 0.02977, "loss": 0.04639, "time": 1.45137}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 3e-05, "memory": 2746, "data_time": 0.00544, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 0.00182, "loss_cls": 0.01369, "acc": 99.41992, "loss_bbox": 0.0277, "loss": 0.04348, "time": 1.43031}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 3e-05, "memory": 2746, "data_time": 0.00568, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.00183, "loss_cls": 0.01332, "acc": 99.46094, "loss_bbox": 0.02619, "loss": 0.04142, "time": 1.46811}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 3e-05, "memory": 2746, "data_time": 0.00582, "loss_rpn_cls": 0.00049, "loss_rpn_bbox": 0.00219, "loss_cls": 0.01451, "acc": 99.375, "loss_bbox": 0.02847, "loss": 0.04566, "time": 1.44863}
{"mode": "val", "epoch": 12, "iter": 345, "lr": 3e-05, "bbox_mAP": 0.563, "bbox_mAP_50": 0.851, "bbox_mAP_75": 0.604, "bbox_mAP_s": 0.131, "bbox_mAP_m": 0.662, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.563 0.851 0.604 0.131 0.662 -1.000"}
