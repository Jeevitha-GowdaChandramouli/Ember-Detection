{"env_info": "sys.platform: linux\nPython: 3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2: GeForce RTX 2080 Ti\nCUDA_HOME: None\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.10.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.2\nOpenCV: 4.5.5\nMMCV: 1.4.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.23.0+3e26931", "config": "model = dict(\n    type='FasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[4, 8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_train_dataset.json',\n        img_prefix='data/0415_take2/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('ember', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take2/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/0415_take2/annotations/ember_val_dataset.json',\n        img_prefix='data/0415_take2/val//',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('ember', )))\nevaluation = dict(interval=12, metric='bbox')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1, by_epoch=False)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nclasses = ('ember', )\nwork_dir = './exps/0415_take2_lowscale'\ngpu_ids = [0]\nauto_resume = False\n", "seed": 984224235, "exp_name": "faster_rcnn_r50_caffe_fpn_mstrain_1x_ember_RPN.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00025, "memory": 2747, "data_time": 0.08972, "loss_rpn_cls": 0.21383, "loss_rpn_bbox": 0.05247, "loss_cls": 0.13457, "acc": 98.40039, "loss_bbox": 0.00181, "loss": 0.40267, "time": 1.7522}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0005, "memory": 2747, "data_time": 0.00555, "loss_rpn_cls": 0.03361, "loss_rpn_bbox": 0.02301, "loss_cls": 0.02416, "acc": 99.63281, "loss_bbox": 0.00741, "loss": 0.08818, "time": 1.46747}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00075, "memory": 2747, "data_time": 0.00581, "loss_rpn_cls": 0.02133, "loss_rpn_bbox": 0.01799, "loss_cls": 0.02619, "acc": 99.30078, "loss_bbox": 0.02718, "loss": 0.09268, "time": 1.39696}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.001, "memory": 2747, "data_time": 0.0056, "loss_rpn_cls": 0.00816, "loss_rpn_bbox": 0.00995, "loss_cls": 0.03705, "acc": 98.70703, "loss_bbox": 0.05095, "loss": 0.10611, "time": 1.46664}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00125, "memory": 2747, "data_time": 0.00548, "loss_rpn_cls": 0.00607, "loss_rpn_bbox": 0.00975, "loss_cls": 0.03383, "acc": 98.61719, "loss_bbox": 0.04784, "loss": 0.0975, "time": 1.67248}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0015, "memory": 2747, "data_time": 0.00581, "loss_rpn_cls": 0.00943, "loss_rpn_bbox": 0.009, "loss_cls": 0.03202, "acc": 98.83984, "loss_bbox": 0.04746, "loss": 0.09791, "time": 1.54404}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00175, "memory": 2747, "data_time": 0.00539, "loss_rpn_cls": 0.00522, "loss_rpn_bbox": 0.00762, "loss_cls": 0.03554, "acc": 98.66602, "loss_bbox": 0.05508, "loss": 0.10346, "time": 1.40069}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.002, "memory": 2747, "data_time": 0.00561, "loss_rpn_cls": 0.00369, "loss_rpn_bbox": 0.00624, "loss_cls": 0.03731, "acc": 98.64453, "loss_bbox": 0.04785, "loss": 0.09509, "time": 1.49747}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0024, "memory": 2747, "data_time": 0.06265, "loss_rpn_cls": 0.00345, "loss_rpn_bbox": 0.00596, "loss_cls": 0.03598, "acc": 98.54297, "loss_bbox": 0.05998, "loss": 0.10537, "time": 1.42154}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00549, "loss_rpn_cls": 0.00291, "loss_rpn_bbox": 0.00519, "loss_cls": 0.03933, "acc": 98.54492, "loss_bbox": 0.05718, "loss": 0.10461, "time": 1.39244}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00664, "loss_rpn_cls": 0.00305, "loss_rpn_bbox": 0.00574, "loss_cls": 0.04003, "acc": 98.38672, "loss_bbox": 0.05731, "loss": 0.10613, "time": 1.35134}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00585, "loss_rpn_cls": 0.00558, "loss_rpn_bbox": 0.00724, "loss_cls": 0.03334, "acc": 98.63281, "loss_bbox": 0.05565, "loss": 0.10181, "time": 1.4104}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.00605, "loss_rpn_cls": 0.00207, "loss_rpn_bbox": 0.005, "loss_cls": 0.03392, "acc": 98.5957, "loss_bbox": 0.05834, "loss": 0.09933, "time": 1.35566}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00594, "loss_rpn_cls": 0.00221, "loss_rpn_bbox": 0.00416, "loss_cls": 0.03541, "acc": 98.58789, "loss_bbox": 0.05731, "loss": 0.09908, "time": 1.33249}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00552, "loss_rpn_cls": 0.00331, "loss_rpn_bbox": 0.00545, "loss_cls": 0.03771, "acc": 98.41406, "loss_bbox": 0.06303, "loss": 0.10951, "time": 1.33449}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00586, "loss_rpn_cls": 0.00175, "loss_rpn_bbox": 0.00492, "loss_cls": 0.03638, "acc": 98.45117, "loss_bbox": 0.06018, "loss": 0.10323, "time": 1.60197}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.05245, "loss_rpn_cls": 0.00138, "loss_rpn_bbox": 0.00462, "loss_cls": 0.03449, "acc": 98.54688, "loss_bbox": 0.05783, "loss": 0.09833, "time": 1.34383}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00539, "loss_rpn_cls": 0.00239, "loss_rpn_bbox": 0.00488, "loss_cls": 0.03461, "acc": 98.46875, "loss_bbox": 0.06013, "loss": 0.10202, "time": 1.32344}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00566, "loss_rpn_cls": 0.00089, "loss_rpn_bbox": 0.00373, "loss_cls": 0.03328, "acc": 98.56055, "loss_bbox": 0.05539, "loss": 0.09329, "time": 1.31503}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00576, "loss_rpn_cls": 0.00129, "loss_rpn_bbox": 0.00377, "loss_cls": 0.03367, "acc": 98.57617, "loss_bbox": 0.05474, "loss": 0.09347, "time": 1.30918}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.00555, "loss_rpn_cls": 0.00369, "loss_rpn_bbox": 0.00438, "loss_cls": 0.03061, "acc": 98.73242, "loss_bbox": 0.05033, "loss": 0.08902, "time": 1.2984}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00564, "loss_rpn_cls": 0.00205, "loss_rpn_bbox": 0.0041, "loss_cls": 0.02892, "acc": 98.86523, "loss_bbox": 0.05066, "loss": 0.08573, "time": 1.38191}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00582, "loss_rpn_cls": 0.00139, "loss_rpn_bbox": 0.00394, "loss_cls": 0.03124, "acc": 98.73047, "loss_bbox": 0.05779, "loss": 0.09435, "time": 1.43571}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00561, "loss_rpn_cls": 0.00068, "loss_rpn_bbox": 0.00362, "loss_cls": 0.03244, "acc": 98.59766, "loss_bbox": 0.05523, "loss": 0.09196, "time": 1.38585}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.05976, "loss_rpn_cls": 0.00133, "loss_rpn_bbox": 0.00398, "loss_cls": 0.03038, "acc": 98.74609, "loss_bbox": 0.06041, "loss": 0.09608, "time": 1.38337}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00592, "loss_rpn_cls": 0.00099, "loss_rpn_bbox": 0.0038, "loss_cls": 0.02935, "acc": 98.70703, "loss_bbox": 0.05374, "loss": 0.08788, "time": 1.57325}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.0057, "loss_rpn_cls": 0.0007, "loss_rpn_bbox": 0.00397, "loss_cls": 0.03245, "acc": 98.55078, "loss_bbox": 0.05672, "loss": 0.09383, "time": 1.30474}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00547, "loss_rpn_cls": 0.00103, "loss_rpn_bbox": 0.00424, "loss_cls": 0.02976, "acc": 98.72461, "loss_bbox": 0.05271, "loss": 0.08774, "time": 1.28936}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.00586, "loss_rpn_cls": 0.00118, "loss_rpn_bbox": 0.00357, "loss_cls": 0.03186, "acc": 98.62305, "loss_bbox": 0.05637, "loss": 0.09297, "time": 1.35429}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00603, "loss_rpn_cls": 0.00083, "loss_rpn_bbox": 0.00339, "loss_cls": 0.02985, "acc": 98.74805, "loss_bbox": 0.05869, "loss": 0.09276, "time": 1.30466}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00564, "loss_rpn_cls": 0.0009, "loss_rpn_bbox": 0.00385, "loss_cls": 0.02675, "acc": 98.84766, "loss_bbox": 0.05163, "loss": 0.08313, "time": 1.30484}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.0054, "loss_rpn_cls": 0.00251, "loss_rpn_bbox": 0.00316, "loss_cls": 0.03087, "acc": 98.78711, "loss_bbox": 0.04863, "loss": 0.08516, "time": 1.321}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.08107, "loss_rpn_cls": 0.00058, "loss_rpn_bbox": 0.00303, "loss_cls": 0.02605, "acc": 98.92773, "loss_bbox": 0.04447, "loss": 0.07413, "time": 1.55869}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.00082, "loss_rpn_bbox": 0.00389, "loss_cls": 0.0274, "acc": 98.77344, "loss_bbox": 0.04639, "loss": 0.0785, "time": 1.39305}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.00043, "loss_rpn_bbox": 0.00365, "loss_cls": 0.02706, "acc": 98.86328, "loss_bbox": 0.04714, "loss": 0.07828, "time": 1.40226}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.0011, "loss_rpn_bbox": 0.003, "loss_cls": 0.02731, "acc": 98.86133, "loss_bbox": 0.04694, "loss": 0.07836, "time": 35.15749}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.00548, "loss_rpn_cls": 0.0006, "loss_rpn_bbox": 0.00305, "loss_cls": 0.02731, "acc": 98.81055, "loss_bbox": 0.04622, "loss": 0.07718, "time": 1.64275}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00633, "loss_rpn_cls": 0.00243, "loss_rpn_bbox": 0.004, "loss_cls": 0.02953, "acc": 98.71289, "loss_bbox": 0.04804, "loss": 0.084, "time": 1.56824}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00695, "loss_rpn_cls": 0.00145, "loss_rpn_bbox": 0.00332, "loss_cls": 0.02572, "acc": 98.94336, "loss_bbox": 0.04331, "loss": 0.07379, "time": 1.61457}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00839, "loss_rpn_cls": 0.00193, "loss_rpn_bbox": 0.00378, "loss_cls": 0.02895, "acc": 98.8418, "loss_bbox": 0.04812, "loss": 0.08278, "time": 1.69663}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.06541, "loss_rpn_cls": 0.00141, "loss_rpn_bbox": 0.00301, "loss_cls": 0.02513, "acc": 98.93945, "loss_bbox": 0.04135, "loss": 0.0709, "time": 1.72899}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00875, "loss_rpn_cls": 0.00069, "loss_rpn_bbox": 0.00368, "loss_cls": 0.02441, "acc": 98.98828, "loss_bbox": 0.04752, "loss": 0.07629, "time": 1.69152}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00664, "loss_rpn_cls": 0.00053, "loss_rpn_bbox": 0.00319, "loss_cls": 0.02716, "acc": 98.82227, "loss_bbox": 0.04705, "loss": 0.07793, "time": 1.63363}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00827, "loss_rpn_cls": 0.00087, "loss_rpn_bbox": 0.00314, "loss_cls": 0.02411, "acc": 98.95312, "loss_bbox": 0.04397, "loss": 0.0721, "time": 1.63929}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.0078, "loss_rpn_cls": 0.00092, "loss_rpn_bbox": 0.00293, "loss_cls": 0.02602, "acc": 98.83984, "loss_bbox": 0.0416, "loss": 0.07147, "time": 1.61643}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00776, "loss_rpn_cls": 0.00067, "loss_rpn_bbox": 0.00284, "loss_cls": 0.02503, "acc": 98.93164, "loss_bbox": 0.04421, "loss": 0.07276, "time": 1.74331}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00798, "loss_rpn_cls": 0.00091, "loss_rpn_bbox": 0.00319, "loss_cls": 0.02602, "acc": 98.9375, "loss_bbox": 0.04707, "loss": 0.0772, "time": 1.95341}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00649, "loss_rpn_cls": 0.00104, "loss_rpn_bbox": 0.00313, "loss_cls": 0.02553, "acc": 98.91797, "loss_bbox": 0.04576, "loss": 0.07546, "time": 1.68442}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.06739, "loss_rpn_cls": 0.00059, "loss_rpn_bbox": 0.00286, "loss_cls": 0.0257, "acc": 98.91211, "loss_bbox": 0.04353, "loss": 0.07267, "time": 1.68143}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00744, "loss_rpn_cls": 0.00047, "loss_rpn_bbox": 0.00265, "loss_cls": 0.02197, "acc": 99.0293, "loss_bbox": 0.04166, "loss": 0.06674, "time": 1.71892}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00751, "loss_rpn_cls": 0.00063, "loss_rpn_bbox": 0.00311, "loss_cls": 0.02428, "acc": 98.97461, "loss_bbox": 0.04672, "loss": 0.07474, "time": 1.67134}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00757, "loss_rpn_cls": 0.00184, "loss_rpn_bbox": 0.00356, "loss_cls": 0.02531, "acc": 99.03125, "loss_bbox": 0.04256, "loss": 0.07328, "time": 1.63128}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.0077, "loss_rpn_cls": 0.0009, "loss_rpn_bbox": 0.003, "loss_cls": 0.02354, "acc": 98.95117, "loss_bbox": 0.04607, "loss": 0.0735, "time": 1.61392}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00769, "loss_rpn_cls": 0.00066, "loss_rpn_bbox": 0.00276, "loss_cls": 0.02257, "acc": 99.05469, "loss_bbox": 0.04217, "loss": 0.06815, "time": 1.5821}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00518, "loss_rpn_cls": 0.00057, "loss_rpn_bbox": 0.00304, "loss_cls": 0.02148, "acc": 99.11914, "loss_bbox": 0.04141, "loss": 0.0665, "time": 1.40973}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00533, "loss_rpn_cls": 0.00074, "loss_rpn_bbox": 0.00273, "loss_cls": 0.02591, "acc": 98.89453, "loss_bbox": 0.04915, "loss": 0.07853, "time": 1.41497}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.0025, "memory": 2747, "data_time": 0.05011, "loss_rpn_cls": 0.00069, "loss_rpn_bbox": 0.00309, "loss_cls": 0.02136, "acc": 99.03906, "loss_bbox": 0.04519, "loss": 0.07033, "time": 1.71692}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0025, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.00105, "loss_rpn_bbox": 0.00265, "loss_cls": 0.01895, "acc": 99.19922, "loss_bbox": 0.03579, "loss": 0.05843, "time": 1.46335}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.0025, "memory": 2747, "data_time": 0.00573, "loss_rpn_cls": 0.00105, "loss_rpn_bbox": 0.00303, "loss_cls": 0.02068, "acc": 99.16406, "loss_bbox": 0.03636, "loss": 0.06112, "time": 1.50357}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.0025, "memory": 2747, "data_time": 0.00549, "loss_rpn_cls": 0.00062, "loss_rpn_bbox": 0.00278, "loss_cls": 0.0229, "acc": 99.04688, "loss_bbox": 0.03923, "loss": 0.06553, "time": 1.49488}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.0025, "memory": 2747, "data_time": 0.00552, "loss_rpn_cls": 0.00031, "loss_rpn_bbox": 0.00268, "loss_cls": 0.02163, "acc": 99.01758, "loss_bbox": 0.03951, "loss": 0.06413, "time": 1.48616}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.0025, "memory": 2747, "data_time": 0.00567, "loss_rpn_cls": 0.0005, "loss_rpn_bbox": 0.00268, "loss_cls": 0.02171, "acc": 99.06445, "loss_bbox": 0.04007, "loss": 0.06495, "time": 1.40892}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.0025, "memory": 2747, "data_time": 0.00577, "loss_rpn_cls": 0.00064, "loss_rpn_bbox": 0.0029, "loss_cls": 0.02315, "acc": 99.04492, "loss_bbox": 0.04418, "loss": 0.07087, "time": 1.45036}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.0025, "memory": 2747, "data_time": 0.00583, "loss_rpn_cls": 0.00031, "loss_rpn_bbox": 0.00306, "loss_cls": 0.02403, "acc": 98.96289, "loss_bbox": 0.04607, "loss": 0.07346, "time": 1.42726}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00025, "memory": 2747, "data_time": 0.0562, "loss_rpn_cls": 0.00038, "loss_rpn_bbox": 0.00207, "loss_cls": 0.02014, "acc": 99.14648, "loss_bbox": 0.03651, "loss": 0.05911, "time": 1.45136}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00025, "memory": 2747, "data_time": 0.00591, "loss_rpn_cls": 0.00049, "loss_rpn_bbox": 0.00203, "loss_cls": 0.01801, "acc": 99.31055, "loss_bbox": 0.03307, "loss": 0.05361, "time": 1.395}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00025, "memory": 2747, "data_time": 0.00577, "loss_rpn_cls": 0.00054, "loss_rpn_bbox": 0.00209, "loss_cls": 0.01906, "acc": 99.20117, "loss_bbox": 0.03574, "loss": 0.05743, "time": 1.6133}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00025, "memory": 2747, "data_time": 0.00586, "loss_rpn_cls": 0.00046, "loss_rpn_bbox": 0.00214, "loss_cls": 0.01925, "acc": 99.23633, "loss_bbox": 0.0329, "loss": 0.05474, "time": 1.38921}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.00025, "memory": 2747, "data_time": 0.00535, "loss_rpn_cls": 0.00044, "loss_rpn_bbox": 0.00173, "loss_cls": 0.01591, "acc": 99.33203, "loss_bbox": 0.02856, "loss": 0.04664, "time": 1.45957}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.00025, "memory": 2747, "data_time": 0.00543, "loss_rpn_cls": 0.00043, "loss_rpn_bbox": 0.00188, "loss_cls": 0.01678, "acc": 99.26172, "loss_bbox": 0.03092, "loss": 0.05001, "time": 1.442}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.00025, "memory": 2747, "data_time": 0.00539, "loss_rpn_cls": 0.00038, "loss_rpn_bbox": 0.00193, "loss_cls": 0.01617, "acc": 99.33398, "loss_bbox": 0.02908, "loss": 0.04756, "time": 1.43291}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.00025, "memory": 2747, "data_time": 0.00545, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00255, "loss_cls": 0.01779, "acc": 99.2793, "loss_bbox": 0.032, "loss": 0.0527, "time": 1.43801}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00025, "memory": 2747, "data_time": 0.05039, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 0.00153, "loss_cls": 0.01748, "acc": 99.29297, "loss_bbox": 0.03107, "loss": 0.05039, "time": 1.43502}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00025, "memory": 2747, "data_time": 0.00583, "loss_rpn_cls": 0.00019, "loss_rpn_bbox": 0.00224, "loss_cls": 0.01759, "acc": 99.30078, "loss_bbox": 0.03054, "loss": 0.05056, "time": 1.41264}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00025, "memory": 2747, "data_time": 0.00566, "loss_rpn_cls": 0.00058, "loss_rpn_bbox": 0.00192, "loss_cls": 0.0168, "acc": 99.34961, "loss_bbox": 0.0297, "loss": 0.049, "time": 1.40636}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00025, "memory": 2747, "data_time": 0.00571, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 0.00169, "loss_cls": 0.01643, "acc": 99.32422, "loss_bbox": 0.02985, "loss": 0.04828, "time": 1.72423}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.00025, "memory": 2747, "data_time": 0.00558, "loss_rpn_cls": 0.00024, "loss_rpn_bbox": 0.00205, "loss_cls": 0.01627, "acc": 99.34961, "loss_bbox": 0.03065, "loss": 0.0492, "time": 1.43162}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.00025, "memory": 2747, "data_time": 0.00583, "loss_rpn_cls": 0.00034, "loss_rpn_bbox": 0.00194, "loss_cls": 0.01657, "acc": 99.28906, "loss_bbox": 0.03072, "loss": 0.04957, "time": 1.39483}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.00025, "memory": 2747, "data_time": 0.00573, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00194, "loss_cls": 0.01616, "acc": 99.31055, "loss_bbox": 0.03022, "loss": 0.04848, "time": 1.39286}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.00025, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.00035, "loss_rpn_bbox": 0.00184, "loss_cls": 0.01626, "acc": 99.30469, "loss_bbox": 0.0306, "loss": 0.04904, "time": 1.45286}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00025, "memory": 2747, "data_time": 0.05599, "loss_rpn_cls": 0.00054, "loss_rpn_bbox": 0.00194, "loss_cls": 0.01571, "acc": 99.35352, "loss_bbox": 0.02912, "loss": 0.0473, "time": 1.44003}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00025, "memory": 2747, "data_time": 0.00571, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.00175, "loss_cls": 0.01409, "acc": 99.44727, "loss_bbox": 0.02623, "loss": 0.04217, "time": 1.45405}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00025, "memory": 2747, "data_time": 0.00565, "loss_rpn_cls": 0.0004, "loss_rpn_bbox": 0.00131, "loss_cls": 0.0149, "acc": 99.37891, "loss_bbox": 0.02749, "loss": 0.0441, "time": 1.40359}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00025, "memory": 2747, "data_time": 0.00542, "loss_rpn_cls": 0.00026, "loss_rpn_bbox": 0.00221, "loss_cls": 0.01627, "acc": 99.34961, "loss_bbox": 0.02975, "loss": 0.04849, "time": 1.40619}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.00025, "memory": 2747, "data_time": 0.0053, "loss_rpn_cls": 0.00033, "loss_rpn_bbox": 0.00189, "loss_cls": 0.01634, "acc": 99.31641, "loss_bbox": 0.0304, "loss": 0.04897, "time": 1.42328}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.00025, "memory": 2747, "data_time": 0.00574, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 0.00182, "loss_cls": 0.01618, "acc": 99.31445, "loss_bbox": 0.03013, "loss": 0.04842, "time": 1.4504}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.00025, "memory": 2747, "data_time": 0.00561, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 0.00188, "loss_cls": 0.01623, "acc": 99.29297, "loss_bbox": 0.03134, "loss": 0.04967, "time": 1.72959}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.00025, "memory": 2747, "data_time": 0.00521, "loss_rpn_cls": 0.00018, "loss_rpn_bbox": 0.00184, "loss_cls": 0.01604, "acc": 99.3457, "loss_bbox": 0.02842, "loss": 0.04648, "time": 1.41041}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 3e-05, "memory": 2747, "data_time": 0.06854, "loss_rpn_cls": 0.00024, "loss_rpn_bbox": 0.00144, "loss_cls": 0.01521, "acc": 99.36328, "loss_bbox": 0.02875, "loss": 0.04564, "time": 1.4399}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 3e-05, "memory": 2747, "data_time": 0.00554, "loss_rpn_cls": 0.00019, "loss_rpn_bbox": 0.00177, "loss_cls": 0.01413, "acc": 99.41992, "loss_bbox": 0.02605, "loss": 0.04213, "time": 1.51306}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 3e-05, "memory": 2747, "data_time": 0.00551, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 0.0016, "loss_cls": 0.01463, "acc": 99.41211, "loss_bbox": 0.02602, "loss": 0.04253, "time": 1.43549}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 3e-05, "memory": 2747, "data_time": 0.00572, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 0.00135, "loss_cls": 0.01494, "acc": 99.36914, "loss_bbox": 0.02653, "loss": 0.04318, "time": 1.48001}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 3e-05, "memory": 2747, "data_time": 0.00513, "loss_rpn_cls": 0.00029, "loss_rpn_bbox": 0.00199, "loss_cls": 0.01605, "acc": 99.34766, "loss_bbox": 0.03068, "loss": 0.04901, "time": 1.47384}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 3e-05, "memory": 2747, "data_time": 0.00586, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 0.00213, "loss_cls": 0.01544, "acc": 99.35938, "loss_bbox": 0.02996, "loss": 0.0477, "time": 1.39731}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 3e-05, "memory": 2747, "data_time": 0.00546, "loss_rpn_cls": 0.00033, "loss_rpn_bbox": 0.00194, "loss_cls": 0.0148, "acc": 99.42969, "loss_bbox": 0.02623, "loss": 0.04329, "time": 1.42313}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 3e-05, "memory": 2747, "data_time": 0.00521, "loss_rpn_cls": 0.00031, "loss_rpn_bbox": 0.00163, "loss_cls": 0.01596, "acc": 99.39258, "loss_bbox": 0.02747, "loss": 0.04538, "time": 1.44754}
{"mode": "val", "epoch": 12, "iter": 345, "lr": 3e-05, "bbox_mAP": 0.587, "bbox_mAP_50": 0.865, "bbox_mAP_75": 0.68, "bbox_mAP_s": 0.145, "bbox_mAP_m": 0.689, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.587 0.865 0.680 0.145 0.689 -1.000"}
